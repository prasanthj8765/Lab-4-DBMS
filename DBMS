supplier_pricing(
	PRICING_ID INT AUTO_INCREMENT,
	PRO_ID INT,
	SUPP_ID INT,
	SUPP_PRICE INT DEFAULT 0,
	PRIMARY KEY(PRICING_ID),
	FOREIGN KEY (PRO_ID) REFERENCES product(PRO_ID),
	FOREIGN KEY (SUPP_ID) REFERENCES supplier(SUPP_ID)
);



https://drive.google.com/file/d/1vnp8ugUv8p8dXAafUutgKVh5xUDnYIit/view?usp=share_link


# Display the total number of customers based on gender who have placed orders of worth at least Rs.3000.
# Identify the tables [order, customer]
SELECT * FROM `order`;
SELECT * FROM customer;

SELECT * FROM `order`
INNER JOIN customer
ON `order`.CUS_ID = customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000;
# ================================================================================
# JOIN BOTH THE TABLES
	(SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
	INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000)
# ================================================================================
# DISPLAY RELEVANT COLUMN ONLY i.e CUS_ID, CUS_GENDER, ORD_AMOUNT, CUS_NAME
SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
(
	SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
	INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
) AS t1 GROUP BY t1.CUS_ID;

# ================================================================================
# # Display the total number of customers based on gender
 SELECT * FROM 
 (
 	SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
	(
		SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
		INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
	) AS t1 GROUP BY t1.CUS_ID
 ) AS t2 GROUP BY t2.cus_gender;

# ================================================================================
 SELECT COUNT(t2.CUS_GENDER) as No_Of_Customers, t2.CUS_GENDER FROM 
 (
 	SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
	(
		SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
		INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
	) AS t1 GROUP BY t1.CUS_ID
 ) AS t2 GROUP BY t2.CUS_GENDER;
# ================================================================================
# Display the total number of customers based on gender who have placed orders of worth at least Rs.3000.
# Identify the tables [order, customer]
SELECT * FROM `order`;
SELECT * FROM customer;

SELECT * FROM `order`
INNER JOIN customer
ON `order`.CUS_ID = customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000;
# ================================================================================
# JOIN BOTH THE TABLES
	(SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
	INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000)
# ================================================================================
# DISPLAY RELEVANT COLUMN ONLY i.e CUS_ID, CUS_GENDER, ORD_AMOUNT, CUS_NAME
SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
(
	SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
	INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
) AS t1 GROUP BY t1.CUS_ID;

# ================================================================================
# # Display the total number of customers based on gender
 SELECT * FROM 
 (
 	SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
	(
		SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
		INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
	) AS t1 GROUP BY t1.CUS_ID
 ) AS t2 GROUP BY t2.cus_gender;

# ================================================================================
 SELECT COUNT(t2.CUS_GENDER) as No_Of_Customers, t2.CUS_GENDER FROM 
 (
 	SELECT t1.CUS_ID,t1.CUS_NAME,t1.CUS_GENDER,t1.ORD_AMOUNT FROM
	(
		SELECT  `order`.*, customer.CUS_NAME,customer.CUS_GENDER   from `order` 
		INNER JOIN  customer WHERE  `order`.CUS_ID =customer.CUS_ID HAVING  `order`.ORD_AMOUNT>=3000
	) AS t1 GROUP BY t1.CUS_ID
 ) AS t2 GROUP BY t2.CUS_GENDER;
# ================================================================================
Q4
#Q5) Display the Supplier details of who is supplying more than one product.
 #===========================================================
 SELECT * FROM supplier;
 SELECT * FROM product;
 SELECT * FROM supplier_pricing;
# IN the SUPP_ID col from the supplier_pricing table we can see each supplier supply more then one product
#===========================================================
  SELECT * FROM supplier_pricing HAVING COUNT(supp_id)>1;
#===========================================================
SELECT * FROM supplier_pricing GROUP BY SUPP_ID HAVING COUNT(SUPP_ID)>1;
#===========================================================
SELECT SUPP_ID, SUPP_NAME,SUPP_CITY,SUPP_PHONE FROM supplier AS sup
INNER JOIN
(SELECT * FROM supplier_pricing GROUP BY SUPP_ID HAVING COUNT(SUPP_ID)>1) AS sp
ON
sup.SUPP_ID = SP.SUPP_ID;
/* SQL Error (1052): Column 'SUPP_ID' in field list is ambiguous */
#===========================================================
SELECT sup.SUPP_ID, SUPP_NAME,SUPP_CITY,SUPP_PHONE FROM supplier AS sup
INNER JOIN
(SELECT * FROM supplier_pricing GROUP BY SUPP_ID HAVING COUNT(SUPP_ID)>1) AS sp
ON
sup.SUPP_ID = SP.SUPP_ID;
#=========================================================== 
# 1. you have writing the inner most query SELECT * FROM supplier_pricing
# 2. Add the relevant clauses GROUP BY SUPP_ID HAVING COUNT(SUPP_ID)>1) then you see the partial results
# 3. Then write the next query
# 4. Integrate both the query using join
Q6
